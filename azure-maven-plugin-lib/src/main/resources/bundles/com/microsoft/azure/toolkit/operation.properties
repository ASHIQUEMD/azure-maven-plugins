account.login.type=login with ({0})
resource.refresh_on_subscription_changed.type=refresh {0}s on subscription changed
resource.preload.type=preload {0}s
resource.preload=preload resources
resource.restart_resource.resource=restart ({0})
resource.start_resource.resource=start ({0})
resource.stop_resource.resource=stop ({0})
resource.list_resources.type=list ({0})s
resource.load_resource.resource|type=load {1} ({0})
resource.draft_for_create.resource|type=initialize draft to create {1} ({0})
resource.draft_for_update.resource|type=initialize draft to update {1} ({0})
resource.reload.resource|type=reload {1} ({0}) from Azure
resource.reload_status.resource|type=refresh status of {1} ({0})
resource.list_supported_regions.type=list supported regions of resource type ({0})
group.create.rg=check resource group ({0})
mysql.start_server.server=start MySQL server({0})
mysql.stop_server.server=stop MySQL server({0})
mysql.restart_server.server=restart MySQL server({0})
postgre.restart_server.server=restart Postgre server({0})
postgre.list_servers.subscription=list PostgreSQL servers of subscription({0})
postgre.get_server.server|rg=get PostgreSQL server({0}) in resource group({1})
storage.delete_account.account=delete storage account({0})
redis.delete_redis.redis=delete redis cache({0})
redis.list_redis=list Redis Caches of selected subscriptions
redis.check_name.redis=check name availability for redis cache({0})
redis.get_redis.redis=get Redis cache({0})
redis.get_jedis_pool=get redis client pool
springcloud.load_cluster.cluster=load Spring Apps({0}) from Azure
springcloud.get_cluster.cluster=get Spring Apps({0}) by name
springcloud.list_clusters.subscription=list Spring Apps of subscription({0})
springcloud.list_clusters=list Spring Apps of selected subscriptions
springcloud.refresh_status.deployment=refresh status of Spring app deployment({0}) from Azure
springcloud.get_app.app=get Spring app({0}) from Azure
springcloud.list_apps.cluster=list apps of Spring Apps({0})
springcloud.load_app.app=load Spring app({0}) from Azure
springcloud.start_app.app=start Spring app({0})
springcloud.stop_app.app=stop Spring app({0})
springcloud.restart_app.app=restart Spring app({0})
springcloud.remove_app.app=remove Spring app({0})
springcloud.create_update_app=create or update Spring app from config in Mojo
springcloud.create_update_app.app=create or update Spring app({0}) from config
springcloud.load_deployment.deployment|app=load deployment({0}) of Spring app({1}) from Azure
springcloud.start_deployment.deployment|app=start deployment({0}) of Spring app({1})
springcloud.stop_deployment.deployment|app=stop deployment({0}) of Spring app({1})
springcloud.restart_deployment.deployment|app=restart deployment({0}) of Spring app({1})
springcloud.scale_deployment.deployment|app=scale deployment({0}) of Spring app({1})
springcloud.update_deployment.deployment|app=update deployment({0}) of Spring app({1})
springcloud.create_deployment.deployment|app=create deployment({0}) of Spring app({1})
springcloud.get_deployment.deployment|app=get deployment({0}) of Spring app({1}) from Azure
springcloud.list_deployments.app=list deployments of Spring app({0})
springcloud.wait_until_deployment_ready.deployment|app=wait deployment({0}) of Spring app({1}) to be ready
springcloud.get_client.subscription=get Spring Apps rest client of subscription({0})
springcloud.config_mojo=generate configuration for Azure Spring Apps Maven plugin
springcloud.deploy_mojo=deploy Spring app to Azure from config
appservice.get_plan.plan|rg=get Azure App Service plan({0}) in resource group({1})
appservice.list_plans.subscription=list Azure App Service plans of subscription({0})
appservice.list_plans.rg=list Azure App Service plans of resource group({0})
appservice.get_deployment.id=get Azure App Service deployment slot by id({0})
appservice.get_client.subscription=get Azure App Service rest client of subscription({0})
appservice.create_update_plan.plan=create or update Azure App Service plan ({0}) from config
appservice.check_name.app=check name availability for ({0})
functionapp.get_app.app|rg=get Function App({0}) in resource group{(1)}
functionapp.list_apps.subscription=list Function Apps of subscription({0})
functionapp.add=create new function class with template
functionapp.deploy_app=deploy to Function App with resource creation or updating
functionapp.list=list templates for Java Azure Functions
functionapp.package=generate configuration files and prepare staging directory
functionapp.run=run function app locally
functionapp.delete_app.app=delete Function App ({0})
functionapp.start_app.app=start Function App ({0})
functionapp.stop_app.app=stop Function App ({0})
functionapp.restart_app.app=restart Function App ({0})
functionapp.delete_slot.slot|app=delete deployment slot ({0}) of Function App ({1})
functionapp.start_slot.slot|app=start deployment slot ({0}) of Function App ({1})
functionapp.stop_slot.slot|app=stop deployment slot ({0}) of Function App ({1})
functionapp.restart_slot.slot|app=restart deployment slot ({0}) of Function App ({1})
webapp.create_update_app.app=create or update Azure Web App ({0}) from config
webapp.deploy_app.app=deploy to Azure Web App({0}) with resource creation or updating
webapp.get_app.app=get Azure Web App({0})
webapp.get_app.app|rg=get Azure Web App({0}) in resource group({1})
webapp.list_apps.subscription=list Azure Web Apps of subscription({0})
webapp.list_runtimes.os|version=list available Azure Web App runtimes with os({0}) and java version({1})
webapp.deploy_app=deploy to Azure Web App with resource creation or updating
webapp.config=generate configuration for web app maven plugin
webapp.create_slot.slot|app=create deployment slot ({0}) of Azure Web App ({1}) from config
webapp.update_slot.slot|app=update deployment slot ({0}) of Azure Web App ({1}) from config
webapp.delete_app.app=delete Azure Web App ({0})
webapp.start_app.app=start Azure Web App ({0})
webapp.stop_app.app=stop Azure Web App ({0})
webapp.restart_app.app=restart Azure Web App ({0})
webapp.delete_slot.slot|app=delete deployment slot ({0}) of Azure Web App ({1})
webapp.start_slot.slot|app=start deployment slot ({0}) of Azure Web App ({1})
webapp.stop_slot.slot|app=stop deployment slot ({0}) of Azure Web App ({1})
webapp.restart_slot.slot|app=restart deployment slot ({0}) of Azure Web App ({1})
vm.stop.vm=stop Azure Virtual Machine ({0})
vm.start.vm=start Azure Virtual Machine ({0})
vm.restart.restart=restart Azure Virtual Machine ({0})
######################start create/update######################
ai.create_ai.ai=create Application Insights ({0})
ai.update_ai.ai=update Application Insights ({0})
function.create_deployment_slot.slot=create Function app deployment slot ({0})
function.update_deployment_slot.slot=update Function app deployment slot ({0})
function.create_app.app=create Azure Function app ({0})
function.update_app.app=update Azure Function app ({0})
appservice.create_plan.plan=create App Service plan ({0})
appservice.update_plan.plan=update App Service plan ({0})
webapp.create_deployment_slot.slot=create Azure WebApp deployment slot ({0})
webapp.update_deployment_slot.slot=update Azure WebApp deployment slot ({0})
webapp.create_app.app=create Azure WebApp ({0})
webapp.update_app.app=update Azure WebApp ({0})
arm.create_deployment.deployment=create Azure Resource deployment ({0})
arm.update_deployment.deployment=update Azure Resource deployment ({0})
arm.create_group.rg=create Resource group ({0})
arm.update_group.rg=update Resource group ({0})
vm.create_vm.vm=create Virtual Machine ({0})
vm.update_vm.vm=update Virtual Machine ({0})
vm.create_nsg.nsg=create Network Security Group ({0})
vm.update_nsg.nsg=update Network Security Group ({0})
vm.create_public_ip_address.address=create Public IP Address ({0})
vm.update_public_ip_address.address=update Public IP Address ({0})
vm.create_network.network=create Virtual Network ({0})
vm.update_network.network=update Virtual Network ({0})
container.create_registry.registry=create Container Registry ({0})
container.update_registry.registry=update Container Registry ({0})
kubernetes.create_cluster.cluster=create Kubernetes Cluster ({0})
kubernetes.update_cluster.cluster=update Kubernetes Cluster ({0})
cosmos.create_cassandra_keyspace.keyspace=create Cassandra Keyspace ({0})
cosmos.update_cassandra_keyspace.keyspace=update Cassandra Keyspace ({0})
cosmos.create_cassandra_table.table=create Cassandra Table ({0})
cosmos.update_cassandra_table.table=update Cassandra Table ({0})
cosmos.create_mongo_collection.collection=create Mongo Collection ({0})
cosmos.update_mongo_collection.collection=update Mongo Collection ({0})
cosmos.create_mongo_database.database=create Mongo Database ({0})
cosmos.update_mongo_database.database=update Mongo Database ({0})
cosmos.create_mongo_document.document=create Mongo Document ({0})
cosmos.update_mongo_document.document=update Mongo Document ({0})
cosmos.create_sql_container.container=create SQL Container ({0})
cosmos.update_sql_container.container=update SQL Container ({0})
cosmos.create_sql_database.database=create SQL Database ({0})
cosmos.update_sql_database.database=update SQL Database ({0})
cosmos.create_sql_document.document=create SQL Document ({0})
cosmos.update_sql_document.document=update SQL Document ({0})
cosmos.create_account.account=create CosmosDB Account ({0})
cosmos.update_account.account=update CosmosDB Account ({0})
mysql.create_firewall_rule.rule=create Firewall Rule ({0})
mysql.update_firewall_rule.rule=update Firewall Rule ({0})
mysql.create_server.server=create MySQL Server ({0})
mysql.update_server.server=update MySQL Server ({0})
postgre.create_firewall_rule.rule=create Firewall Rule ({0})
postgre.update_firewall_rule.rule=update Firewall Rule ({0})
postgre.create_server.server=create PostgreSQL Server ({0})
postgre.update_server.server=update PostgreSQL Server ({0})
redis.create_redis.redis=create Redis Cache ({0})
redis.update_redis.redis=update Redis Cache ({0})
springcloud.create_app.app=create Azure Spring App ({0})
springcloud.update_app.app=update Azure Spring App ({0})
springcloud.create_app_deployment.deployment=create Azure Spring App deployment ({0})
springcloud.update_app_deployment.deployment=update Azure Spring App deployment ({0})
sqlserver.create_firewall_rule.rule=create Firewall Rule ({0})
sqlserver.update_firewall_rule.rule=update Firewall Rule ({0})
sqlserver.create_server.server=create SQL Server ({0})
sqlserver.update_server.server=update SQL Server ({0})
storage.create_blob_container.container=create Blob Container ({0})
storage.update_blob_container.container=update Blob Container ({0})
storage.create_blob.blob=create Blob item ({0})
storage.update_blob.blob=update Blob item ({0})
storage.create_queue.queue=create Queue ({0})
storage.update_queue.queue=update Queue ({0})
storage.create_share.share=create File Share ({0})
storage.update_share.share=update File Share ({0})
storage.create_share_file.file=create file ({0})
storage.update_share_file.file=update file ({0})
storage.create_table.table=create Table ({0})
storage.update_table.table=update Table ({0})
storage.create_account.account=create Storage Account ({0})
storage.update_account.account=update Storage Account ({0})
######################end create/update######################
######################start delete######################
resource.delete_resource.resource|type=delete {1} ({0})
ai.delete_ai.ai=delete Application Insights ({0})
container.delete_registry.registry=delete Container Registry ({0})
kubernetes.delete_cluster.cluster=delete Kubernetes Cluster ({0})
cosmos.delete_cassandra_keyspace.keyspace=delete Cassandra Keyspace ({0})
cosmos.delete_cassandra_table.table=delete Cassandra Table ({0})
cosmos.delete_mongo_collection.collection=delete Mongo Collection ({0})
cosmos.delete_mongo_table.table=delete Mongo Table ({0})
cosmos.delete_sql_container.container=delete SQL Container ({0})
cosmos.delete_sql_database.database=delete SQL Database ({0})
cosmos.delete_sql_document.document=delete SQL Document ({0})
mysql.delete_database.database=delete MySQL Database ({0})
mysql.delete_firewall_rule.rule=delete Firewall Rule ({0})
mysql.delete_server.server=delete MySQL Server ({0})
postgre.delete_database.database=delete PostgreSQL Database ({0})
postgre.delete_firewall_rule.rule=delete Firewall Rule ({0})
postgre.delete_server.server=delete PostgreSQL Server ({0})
sqlserver.delete_database.database=delete SQL Server Database ({0})
sqlserver.delete_firewall_rule.rule=delete Firewall Rule ({0})
sqlserver.delete_server.server=delete SQL Server ({0})
storage.delete_blob_container.container=delete Blob Container ({0})
storage.delete_blob.blob=delete Blob item ({0})
storage.delete_queue.queue=delete Queue ({0})
storage.delete_share_file.file=delete file ({0})
storage.delete_share.share=delete File Share ({0})
storage.delete_table.table=delete Table ({0})
######################end delete######################
